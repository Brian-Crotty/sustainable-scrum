{"ast":null,"code":"var _jsxFileName = \"/Users/emmasteinman/school/senior/spring/sustainable-scrum/frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Chart from \"chart.js\";\n\nfunction Title() {\n  return React.createElement(\"div\", {\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \" Welcome to Denison Sustainability Dashboard! \");\n}\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let data = [];\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date('2018-05-01T00:00:00').getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getFeeds() {\n  let feeds = [];\n  feeds.push({\n    title: 'Visits',\n    data: getRandomDateArray(150)\n  });\n  feeds.push({\n    title: 'Categories',\n    data: getRandomArray(20)\n  });\n  feeds.push({\n    title: 'Categories',\n    data: getRandomArray(10)\n  });\n  feeds.push({\n    title: 'Data 4',\n    data: getRandomArray(6)\n  });\n  return feeds;\n}\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'bar',\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.color\n        }]\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"canvas\", {\n      ref: this.chartRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    });\n  }\n\n}\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      months: 12,\n      water: true,\n      electric: false,\n      solar: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"body2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, [1, 2, 3], \" \");\n  }\n\n}\n\nfunction Footer() {\n  return React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \" For more information visit www.denison.edu/sustainability \");\n}\n\nclass Page extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Graph, {\n      data: [1, 2, 3],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Page, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 131\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/emmasteinman/school/senior/spring/sustainable-scrum/frontend/src/index.js"],"names":["React","ReactDOM","serviceWorker","Chart","Title","getRandomArray","numItems","names","data","i","push","label","value","Math","round","random","getRandomDateArray","baseTime","Date","getTime","dayMs","time","getFeeds","feeds","title","BarChart","Component","constructor","props","chartRef","createRef","componentDidMount","myChart","canvasRef","current","type","labels","map","d","datasets","backgroundColor","color","render","Graph","state","months","water","electric","solar","Footer","Page","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,SAASC,KAAT,GAAgB;AACd,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF;AAGD;;AACD,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC;AACA,MAAIC,KAAK,GAAG,4BAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAnB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,MAAAA,KAAK,EAAEJ,KAAK,CAACE,CAAD,CADJ;AAERG,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAK,KAAKD,IAAI,CAACE,MAAL,EAArB;AAFC,KAAV;AAID;;AACD,SAAOP,IAAP;AACD;;AAED,SAASQ,kBAAT,CAA4BV,QAA5B,EAAsC;AACpC;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIS,QAAQ,GAAG,IAAIC,IAAJ,CAAS,qBAAT,EAAgCC,OAAhC,EAAf;AACA,MAAIC,KAAK,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA3B;;AACA,OAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAnB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACRW,MAAAA,IAAI,EAAE,IAAIH,IAAJ,CAASD,QAAQ,GAAGR,CAAC,GAAGW,KAAxB,CADE;AAERR,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAK,KAAKD,IAAI,CAACE,MAAL,EAArB;AAFC,KAAV;AAID;;AACD,SAAOP,IAAP;AACD;;AAGD,SAASc,QAAT,GAAoB;AAClB,MAAIC,KAAK,GAAG,EAAZ;AAEAA,EAAAA,KAAK,CAACb,IAAN,CAAW;AACTc,IAAAA,KAAK,EAAE,QADE;AAEThB,IAAAA,IAAI,EAAEQ,kBAAkB,CAAC,GAAD;AAFf,GAAX;AAKAO,EAAAA,KAAK,CAACb,IAAN,CAAW;AACTc,IAAAA,KAAK,EAAE,YADE;AAEThB,IAAAA,IAAI,EAAEH,cAAc,CAAC,EAAD;AAFX,GAAX;AAKAkB,EAAAA,KAAK,CAACb,IAAN,CAAW;AACTc,IAAAA,KAAK,EAAE,YADE;AAEThB,IAAAA,IAAI,EAAEH,cAAc,CAAC,EAAD;AAFX,GAAX;AAKAkB,EAAAA,KAAK,CAACb,IAAN,CAAW;AACTc,IAAAA,KAAK,EAAE,QADE;AAEThB,IAAAA,IAAI,EAAEH,cAAc,CAAC,CAAD;AAFX,GAAX;AAKA,SAAOkB,KAAP;AACD;;AAED,MAAME,QAAN,SAAuBzB,KAAK,CAAC0B,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,QAAL,GAAgB7B,KAAK,CAAC8B,SAAN,EAAhB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKC,OAAL,GAAe,IAAI7B,KAAJ,CAAU,KAAK8B,SAAL,CAAeC,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,KADyC;AAE/C3B,MAAAA,IAAI,EAAE;AACJ4B,QAAAA,MAAM,EAAE,KAAKR,KAAL,CAAWpB,IAAX,CAAgB6B,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAAC3B,KAA3B,CADJ;AAEJ4B,QAAAA,QAAQ,EAAE,CAAC;AACT5B,UAAAA,KAAK,EAAE,KAAKiB,KAAL,CAAWJ,KADT;AAEThB,UAAAA,IAAI,EAAE,KAAKoB,KAAL,CAAWpB,IAAX,CAAgB6B,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAAC1B,KAA3B,CAFG;AAGT4B,UAAAA,eAAe,EAAE,KAAKZ,KAAL,CAAWa;AAHnB,SAAD;AAFN;AAFyC,KAAlC,CAAf;AAYD;;AACDC,EAAAA,MAAM,GAAE;AACN,WACE;AAAQ,MAAA,GAAG,EAAE,KAAKb,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAxBsC;;AA6BvC,MAAMc,KAAN,SAAoB3C,KAAK,CAAC0B,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKgB,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAG,EADE;AAEXC,MAAAA,KAAK,EAAG,IAFG;AAGXC,MAAAA,QAAQ,EAAG,KAHA;AAIXC,MAAAA,KAAK,EAAG;AAJG,KAAb;AAOD;;AACDN,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAxB,MADF;AAGD;;AAfiC;;AAkBpC,SAASO,MAAT,GAAkB;AAChB,SACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mEADF;AAGD;;AAED,MAAMC,IAAN,SAAmBlD,KAAK,CAAC0B,SAAzB,CAAkC;AAChCgB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAE,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADF;AAOD;;AAT+B;;AAYlCzC,QAAQ,CAACyC,MAAT,CAAgB,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAA0BS,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAA1B,E,CAEA;AACA;AACA;;AACAlD,aAAa,CAACmD,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Chart from \"chart.js\";\n\nfunction Title(){\n  return (\n    <div className=\"header\"> Welcome to Denison Sustainability Dashboard! </div>\n  );\n}\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let data = [];\n  for(var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date('2018-05-01T00:00:00').getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n  for(var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n  return data;\n}\n\n\nfunction getFeeds() {\n  let feeds = [];\n\n  feeds.push({\n    title: 'Visits',\n    data: getRandomDateArray(150)\n  });\n\n  feeds.push({\n    title: 'Categories',\n    data: getRandomArray(20)\n  });\n\n  feeds.push({\n    title: 'Categories',\n    data: getRandomArray(10)\n  });\n\n  feeds.push({\n    title: 'Data 4',\n    data: getRandomArray(6)\n  });\n\n  return feeds;\n}\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chartRef = React.createRef();\n  }\n\n  componentDidMount() {\n  this.myChart = new Chart(this.canvasRef.current, {\n    type: 'bar',\n    data: {\n      labels: this.props.data.map(d => d.label),\n      datasets: [{\n        label: this.props.title,\n        data: this.props.data.map(d => d.value),\n        backgroundColor: this.props.color\n      }]\n  }\n});\n\n}\nrender(){\n  return (\n    <canvas ref={this.chartRef}/>\n  );\n}\n\n}\n\n\nclass Graph extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      months : 12,\n      water : true,\n      electric : false,\n      solar : false,\n\n    };\n  };\n  render() {\n    return(\n      <div className=\"body2\">{[1,2,3]} </div>\n    );\n  }\n}\n\nfunction Footer() {\n  return (\n    <div className=\"footer\"> For more information visit www.denison.edu/sustainability </div>\n  );\n}\n\nclass Page extends React.Component{\n  render(){\n    return(\n      <div>\n      <Title/>\n      <Graph data={[1,2,3]}/>\n      <Footer/>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Page />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}